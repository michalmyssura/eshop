{"ast":null,"code":"var _jsxFileName = \"/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/order/MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from \"../layouts/MetaData\";\nimport Loader from \"../layouts/Loader\";\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyOrders = () => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [{\n        label: 'Numer zamówienia',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Ilość przedmiotów',\n        field: 'numOfItems',\n        sort: 'asc'\n      }, {\n        label: 'Koszt',\n        field: 'amount',\n        sort: 'asc'\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Podgląd',\n        field: 'actions',\n        sort: 'asc'\n      }],\n      rows: []\n    };\n    orders.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `${order.totalPrice} zł`,\n        status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/order/${order._id}`,\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Moje zamówienia'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"myorders\",\n      children: \"Moje zam\\xF3wienia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: setOrders(),\n      className: \"px-3\",\n      bordered: true,\n      striped: true,\n      hover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyOrders, \"YmEfncUQxZ+qfHRSODBLlYTI4+Y=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = MyOrders;\nexport default MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/order/MyOrders.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","useAlert","useDispatch","useSelector","myOrders","clearErrors","MyOrders","alert","dispatch","loading","error","orders","state","setOrders","data","columns","label","field","sort","rows","forEach","order","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from \"../layouts/MetaData\";\nimport Loader from \"../layouts/Loader\";\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst MyOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Numer zamówienia',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Ilość przedmiotów',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Koszt',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Podgląd',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `${order.totalPrice} zł`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Moje zamówienia'} />\n\n            <h1 className=\"myorders\">Moje zamówienia</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default MyOrders\n"]},"metadata":{},"sourceType":"module"}