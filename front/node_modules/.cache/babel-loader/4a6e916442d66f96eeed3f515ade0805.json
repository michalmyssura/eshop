{"ast":null,"code":"var _jsxFileName = \"/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/route/routeProtection.js\";\nimport React, { Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  isAuthenticated,\n  loading,\n  user\n} = useSelector(state => state.auth);\n\nconst routeProtection = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        if (isAuthenticated === false) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 36\n          }, this);\n        } // if (isAdmin === true && user.role !== 'admin') {\n        //    return <Redirect to=\"/\" />\n        // }\n\n\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 32\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nexport default routeProtection;","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/route/routeProtection.js"],"names":["React","Fragment","Route","Redirect","useSelector","isAuthenticated","loading","user","state","auth","routeProtection","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAM;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,IAAqCH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtD;;AACA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAsC;AAI1D,sBACI,QAAC,QAAD;AAAA,cACKP,OAAO,KAAK,KAAZ,iBACG,QAAC,KAAD,OACQO,IADR;AAEI,MAAA,MAAM,EAAEC,KAAK,IAAI;AACb,YAAIT,eAAe,KAAK,KAAxB,EAA+B;AAC3B,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAHY,CAKd;AACC;AACD;;;AAEC,4BAAO,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AAZL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAxBD;;AA0BA,eAAeJ,eAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst { isAuthenticated, loading, user } = useSelector(state => state.auth)\nconst routeProtection = ({component: Component, ...rest }) => {\n\n\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                       // if (isAdmin === true && user.role !== 'admin') {\n                        //    return <Redirect to=\"/\" />\n                       // }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default routeProtection;\n"]},"metadata":{},"sourceType":"module"}