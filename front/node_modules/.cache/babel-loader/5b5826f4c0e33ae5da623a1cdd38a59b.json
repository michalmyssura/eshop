{"ast":null,"code":"var _jsxFileName = \"/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/user/NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport '../../App.css';\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MetaData from \"../layouts/MetaData\";\nimport { resetPassword, clearErrors } from \"../../actions/userAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPassword = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.forgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success('token został wysłany');\n      history.push('/login');\n    }\n  }, [dispatch, alert, success, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('password', confirmPassword);\n    dispatch(resetPassword(match.params.token, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'New Reset Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: confirmPassword,\n              onChange: e => setConfirmPasword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new_password_button\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPassword, \"dsxmhH0ouXglunhFD9IUMQBWwds=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = NewPassword;\nexport default NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/user/NewPassword.js"],"names":["React","Fragment","useState","useEffect","useAlert","useDispatch","useSelector","MetaData","resetPassword","clearErrors","NewPassword","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","error","success","state","forgotPassword","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","target","value","setConfirmPasword"],"mappings":"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","sourcesContent":["import React, {Fragment,useState,useEffect} from \"react\";\nimport '../../App.css';\nimport {useAlert} from \"react-alert\";\nimport {useDispatch,useSelector} from \"react-redux\";\nimport MetaData from \"../layouts/MetaData\";\nimport {resetPassword, clearErrors} from \"../../actions/userAction\";\n\n\nconst NewPassword = ({history,match}) =>{\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n\n    const {error, success} = useSelector(state => state.forgotPassword);\n\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        if (success) {\n            alert.success('token został wysłany');\n\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, success,history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.set('password', confirmPassword);\n\n        dispatch(resetPassword(match.params.token,formData));\n    }\n\n\n    return(\n        <Fragment>\n            <MetaData title={'New Reset Password'}/>\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e)=>setPassword(e.target.value)}\n\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e)=>setConfirmPasword(e.target.value)}\n\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n\n        </Fragment>\n    )\n\n\n\n}\n\nexport default NewPassword;\n"]},"metadata":{},"sourceType":"module"}