{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, productsReducer, productDetailsReducer, newReviewReducer, newProductReducer } from \"./reducer/productReducer\";\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer } from \"./reducer/userReducer\";\nimport { cartReducer } from \"./reducer/cartReducer\";\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from \"./reducer/orderReducer\";\nconst reducer = combineReducers({\n  product: productReducer,\n  productDetails: productDetailsReducer,\n  products: productsReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer,\n  newProduct: newProductReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  allUsers: allUsersReducer\n});\nlet initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productsReducer","productDetailsReducer","newReviewReducer","newProductReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","reducer","product","productDetails","products","auth","user","forgotPassword","cart","newOrder","myOrders","orderDetails","newReview","newProduct","allOrders","order","allUsers","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,cAAR,EAAuBC,eAAvB,EAAuCC,qBAAvC,EAA6DC,gBAA7D,EAA8EC,iBAA9E,QAAsG,0BAAtG;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,qBAAlC,EAAyDC,eAAzD,QAA+E,uBAA/E;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SACIC,eADJ,EAEIC,eAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,YALJ,QAMO,wBANP;AAUA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC5BoB,EAAAA,OAAO,EAAChB,cADoB;AAE5BiB,EAAAA,cAAc,EAACf,qBAFa;AAG5BgB,EAAAA,QAAQ,EAACjB,eAHmB;AAI5BkB,EAAAA,IAAI,EAACd,WAJuB;AAK5Be,EAAAA,IAAI,EAACd,WALuB;AAM5Be,EAAAA,cAAc,EAACd,qBANa;AAO5Be,EAAAA,IAAI,EAAEb,WAPsB;AAQ5Bc,EAAAA,QAAQ,EAACb,eARmB;AAS5Bc,EAAAA,QAAQ,EAACb,eATmB;AAU5Bc,EAAAA,YAAY,EAACb,mBAVe;AAW5Bc,EAAAA,SAAS,EAACvB,gBAXkB;AAY5BwB,EAAAA,UAAU,EAACvB,iBAZiB;AAa5BwB,EAAAA,SAAS,EAACf,gBAbkB;AAc5BgB,EAAAA,KAAK,EAACf,YAdsB;AAe5BgB,EAAAA,QAAQ,EAACtB;AAfmB,CAAD,CAA/B;AAmBA,IAAIuB,YAAY,GAAG,EAAnB;AAEA,MAAMC,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CAACoB,OAAD,EAASgB,YAAT,EAAsBhC,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {productReducer,productsReducer,productDetailsReducer,newReviewReducer,newProductReducer} from \"./reducer/productReducer\";\nimport {authReducer, userReducer, forgotPasswordReducer, allUsersReducer} from \"./reducer/userReducer\";\nimport {cartReducer} from \"./reducer/cartReducer\";\nimport {\n    newOrderReducer,\n    myOrdersReducer,\n    orderDetailsReducer,\n    allOrdersReducer,\n    orderReducer\n} from \"./reducer/orderReducer\";\n\n\n\nconst reducer = combineReducers({\n    product:productReducer,\n    productDetails:productDetailsReducer,\n    products:productsReducer,\n    auth:authReducer,\n    user:userReducer,\n    forgotPassword:forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder:newOrderReducer,\n    myOrders:myOrdersReducer,\n    orderDetails:orderDetailsReducer,\n    newReview:newReviewReducer,\n    newProduct:newProductReducer,\n    allOrders:allOrdersReducer,\n    order:orderReducer,\n    allUsers:allUsersReducer\n\n})\n\nlet initialState = {}\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}