{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, CLEAR_ERRORS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST } from '../constant/ProductConstant';\nexport const getProducts = (keyword = '', price, category, rating) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getDetailsProducts = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //clear errors\n\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/actions/productAction.js"],"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","CLEAR_ERRORS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","getProducts","keyword","price","category","rating","dispatch","type","link","data","get","payload","err","response","message","getDetailsProducts","id","product","error","newReview","reviewData","NEW_REVIEW_REQUEST","config","headers","put","NEW_REVIEW_SUCCESS","success","NEW_REVIEW_FAIL","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {ALL_PRODUCT_REQUEST,ALL_PRODUCT_SUCCESS,ALL_PRODUCT_FAIL,CLEAR_ERRORS,PRODUCT_DETAILS_FAIL,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_REQUEST} from '../constant/ProductConstant';\n\nexport const getProducts = (keyword='',price,category,rating) => async (dispatch) =>{\n    try{\n    dispatch({type: ALL_PRODUCT_REQUEST})\n        let link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category){\n            link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`\n        }\n\n        const {data} = await axios.get(link)\n        dispatch({\n            type:ALL_PRODUCT_SUCCESS,\n            payload:data,\n        })\n    }\n    catch (err)\n    {\n        dispatch({\n            type:ALL_PRODUCT_FAIL,\n            payload:err.response.data.message\n        })\n    }\n}\n\n\n\nexport const getDetailsProducts = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n//clear errors\n\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const clearErrors = () => async (dispatch) =>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n}\n\n\n"]},"metadata":{},"sourceType":"module"}