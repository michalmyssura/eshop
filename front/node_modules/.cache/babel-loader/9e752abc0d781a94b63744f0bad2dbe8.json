{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, productDetailsReducer } from \"./reducer/productReducer\";\nimport { authReducer, userReducer, forgotPasswordReducer } from \"./reducer/userReducer\";\nimport { cartReducer } from \"./reducer/cartReducer\";\nimport { newOrderReducer, myOrdersReducer } from \"./reducer/orderReducer\";\nconst reducer = combineReducers({\n  products: productReducer,\n  productDetails: productDetailsReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer\n});\nlet initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/Store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailsReducer","authReducer","userReducer","forgotPasswordReducer","cartReducer","newOrderReducer","myOrdersReducer","reducer","products","productDetails","auth","user","forgotPassword","cart","newOrder","myOrders","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,cAAR,EAAuBC,qBAAvB,QAAmD,0BAAnD;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,qBAAlC,QAA8D,uBAA9D;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,eAAR,EAAwBC,eAAxB,QAA8C,wBAA9C;AAGA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,QAAQ,EAACT,cADmB;AAE5BU,EAAAA,cAAc,EAACT,qBAFa;AAG5BU,EAAAA,IAAI,EAACT,WAHuB;AAI5BU,EAAAA,IAAI,EAACT,WAJuB;AAK5BU,EAAAA,cAAc,EAACT,qBALa;AAM5BU,EAAAA,IAAI,EAAET,WANsB;AAO5BU,EAAAA,QAAQ,EAACT,eAPmB;AAQ5BU,EAAAA,QAAQ,EAACT;AARmB,CAAD,CAA/B;AAYA,IAAIU,YAAY,GAAG,EAAnB;AAEA,MAAMC,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CAACa,OAAD,EAASS,YAAT,EAAsBlB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {productReducer,productDetailsReducer} from \"./reducer/productReducer\";\nimport {authReducer, userReducer, forgotPasswordReducer} from \"./reducer/userReducer\";\nimport {cartReducer} from \"./reducer/cartReducer\";\nimport {newOrderReducer,myOrdersReducer} from \"./reducer/orderReducer\";\n\n\nconst reducer = combineReducers({\n    products:productReducer,\n    productDetails:productDetailsReducer,\n    auth:authReducer,\n    user:userReducer,\n    forgotPassword:forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder:newOrderReducer,\n    myOrders:myOrdersReducer\n\n})\n\nlet initialState = {}\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}