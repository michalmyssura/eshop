{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, CLEAR_ERRORS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, NEW_REVIEW_REQUEST, ADMIN_PRODUCTS_FAIL, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_REQUEST, NEW_PRODUCT_FAIL, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL } from '../constant/ProductConstant';\nexport const getProducts = (keyword = '', price, category, rating) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getCategory = category => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products`;\n\n    if (category) {\n      link = `/api/v1/products?category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getDetailsProducts = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/products`);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n}; //ADMIN\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product (ADMIN)\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteReview = (id, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/michalmyssura/Documents/projektdyplomowy/front/src/actions/productAction.js"],"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","CLEAR_ERRORS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","NEW_REVIEW_REQUEST","ADMIN_PRODUCTS_FAIL","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_REQUEST","NEW_PRODUCT_FAIL","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","getProducts","keyword","price","category","rating","dispatch","type","link","data","get","payload","err","response","message","getCategory","getDetailsProducts","id","product","error","newReview","reviewData","config","headers","put","success","newProduct","productData","post","getAdminProducts","products","clearErrors","deleteProduct","delete","updateProduct","getProductReviews","reviews","deleteReview","productId","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n    ALL_PRODUCT_REQUEST,\n    ALL_PRODUCT_SUCCESS,\n    ALL_PRODUCT_FAIL,\n    CLEAR_ERRORS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    NEW_REVIEW_REQUEST,\n    ADMIN_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_FAIL,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL\n} from '../constant/ProductConstant';\n\nexport const getProducts = (keyword='',price,category,rating) => async (dispatch) =>{\n    try{\n    dispatch({type: ALL_PRODUCT_REQUEST})\n        let link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category){\n            link = `/api/v1/products?keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`\n        }\n\n        const {data} = await axios.get(link)\n        dispatch({\n            type:ALL_PRODUCT_SUCCESS,\n            payload:data,\n        })\n    }\n    catch (err)\n    {\n        dispatch({\n            type:ALL_PRODUCT_FAIL,\n            payload:err.response.data.message\n        })\n    }\n}\n\nexport const getCategory = (category) => async (dispatch) =>{\n    try{\n        dispatch({type: ALL_PRODUCT_REQUEST})\n        let link = `/api/v1/products`\n\n        if(category)\n        {\n             link = `/api/v1/products?category=${category}`\n        }\n\n\n        const {data} = await axios.get(link)\n        dispatch({\n            type:ALL_PRODUCT_SUCCESS,\n            payload:data,\n        })\n    }\n    catch (err)\n    {\n        dispatch({\n            type:ALL_PRODUCT_FAIL,\n            payload:err.response.data.message\n        })\n    }\n}\n\nexport const getDetailsProducts = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n\n\n}\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const clearErrors = () => async (dispatch) =>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n}\n\n\n//ADMIN\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}