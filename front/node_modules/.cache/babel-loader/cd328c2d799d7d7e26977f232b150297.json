{"ast":null,"code":"var _jsxFileName = \"/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/user/updatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport '../../App.css';\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MetaData from \"../layouts/MetaData\";\nimport { updatePassword, loadUser, clearErrors, register, updateProfile } from \"../../actions/userAction\";\nimport { UPDATE_PASSWD_RESET, UPDATE_PROFILE_RESET } from \"../../constant/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePassword = ({\n  history\n}) => {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('password updated succesfully');\n      dispatch(loadUser());\n      history.push('/me');\n      dispatch({\n        type: UPDATE_PASSWD_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('oldPassword', oldPassword);\n    formData.set('newPassword', newPassword);\n    dispatch(updatePassword(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'update Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: oldPassword,\n              onChange: e => setOldPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new_password_button\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            disabled: loading ? true : false,\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePassword, \"fUKzNurWBM1whtb/ok8fz70PnfM=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdatePassword;\nexport default UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/user/updatePassword.js"],"names":["React","Fragment","useState","useEffect","useAlert","useDispatch","useSelector","MetaData","updatePassword","loadUser","clearErrors","register","updateProfile","UPDATE_PASSWD_RESET","UPDATE_PROFILE_RESET","UpdatePassword","history","oldPassword","setOldPassword","newPassword","setNewPassword","alert","dispatch","user","state","auth","error","isUpdated","loading","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,QAAxB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAO,eAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,EAAkCC,WAAlC,EAA+CC,QAA/C,EAAyDC,aAAzD,QAA6E,0BAA7E;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,QAAwD,8BAAxD;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMmB,KAAK,GAAGjB,QAAQ,EAAtB;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AAGA,QAAM;AAACkB,IAAAA;AAAD,MAASjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA8BtB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAA/C;AAGApB,EAAAA,SAAS,CAAC,MAAM;AAGZ,QAAIuB,KAAJ,EAAW;AACPL,MAAAA,KAAK,CAACK,KAAN,CAAYA,KAAZ;AACAJ,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACH;;AACD,QAAIiB,SAAJ,EAAe;AACXN,MAAAA,KAAK,CAACQ,OAAN,CAAc,8BAAd;AACAP,MAAAA,QAAQ,CAACb,QAAQ,EAAT,CAAR;AACAO,MAAAA,OAAO,CAACc,IAAR,CAAa,KAAb;AAEAR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAElB;AADD,OAAD,CAAR;AAGH;AAEJ,GAjBQ,EAiBN,CAACS,QAAD,EAAWD,KAAX,EAAkBK,KAAlB,EAAyBV,OAAzB,EAAkCW,SAAlC,CAjBM,CAAT;;AAmBA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,CAAa,aAAb,EAA4BpB,WAA5B;AACAkB,IAAAA,QAAQ,CAACE,GAAT,CAAa,aAAb,EAA4BlB,WAA5B;AAEAG,IAAAA,QAAQ,CAACd,cAAc,CAAC2B,QAAD,CAAf,CAAR;AACH,GAPD;;AASA,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,QAAQ,EAAEH,aAAtC;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,EAAE,EAAC,gBAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,KAAK,EAAEf,WAJX;AAKI,cAAA,QAAQ,EAAGgB,CAAD,IAAKf,cAAc,CAACe,CAAC,CAACK,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAeI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,EAAE,EAAC,wBAFP;AAGI,cAAA,SAAS,EAAC,cAHd;AAII,cAAA,KAAK,EAAEpB,WAJX;AAKI,cAAA,QAAQ,EAAGc,CAAD,IAAKb,cAAc,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eA2BI;AACI,YAAA,EAAE,EAAC,qBADP;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,SAAS,EAAC,oBAHd;AAGmC,YAAA,QAAQ,EAAEX,OAAO,GAAG,IAAH,GAAQ,KAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CAxFD;;GAAMb,c;UAKYX,Q,EACGC,W,EAGFC,W,EACqBA,W;;;KAVlCS,c;AAyFN,eAAeA,cAAf","sourcesContent":["import React, {Fragment,useState,useEffect} from \"react\";\nimport '../../App.css';\nimport {useAlert} from \"react-alert\";\nimport {useDispatch,useSelector} from \"react-redux\";\nimport MetaData from \"../layouts/MetaData\";\nimport {updatePassword, loadUser, clearErrors, register, updateProfile} from \"../../actions/userAction\";\nimport {UPDATE_PASSWD_RESET, UPDATE_PROFILE_RESET} from \"../../constant/userConstants\";\n\nconst UpdatePassword = ({history}) => {\n\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n\n    const {user} = useSelector(state => state.auth);\n    const {error, isUpdated, loading} = useSelector(state => state.user);\n\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        if (isUpdated) {\n            alert.success('password updated succesfully');\n            dispatch(loadUser());\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('newPassword', newPassword);\n\n        dispatch(updatePassword(formData));\n    }\n\n    return(\n        <Fragment>\n        <MetaData title={'update Password'}/>\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e)=>setOldPassword(e.target.value)}\n\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={newPassword}\n                                onChange={(e)=>setNewPassword(e.target.value)}\n\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\" disabled={loading ? true:false}>\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n\n        </Fragment>\n    )\n\n}\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}