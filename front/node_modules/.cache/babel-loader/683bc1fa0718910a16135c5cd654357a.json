{"ast":null,"code":"var _jsxFileName = \"/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/admin/ProductList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from \"../layouts/MetaData\";\nimport Loader from \"../layouts/Loader\";\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdminProducts, clearErrors } from '../../actions/productAction'; //import { DELETE_PRODUCT_RESET } from '../../constant/ProductConstant'\n\nimport { deleteProduct } from \"../../actions/productAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductsList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.products); //const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n  useEffect(() => {\n    dispatch(getAdminProducts());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error, history]);\n\n  const setProducts = () => {\n    const data = {\n      columns: [{\n        label: 'ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Price',\n        field: 'price',\n        sort: 'asc'\n      }, {\n        label: 'Stock',\n        field: 'stock',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    products.forEach(product => {\n      data.rows.push({\n        id: product._id,\n        name: product.name,\n        price: `$${product.price}`,\n        stock: product.stock,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/product/${product._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            onClick: () => deleteProductHandler(product._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  const deleteProductHandler = id => {\n    dispatch(deleteProduct(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Products'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setProducts(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductsList, \"JhFbTP67Ad9BqC0U/oanDQz34j0=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ProductsList;\nexport default ProductsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/components/admin/ProductList.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","getAdminProducts","clearErrors","deleteProduct","ProductsList","history","alert","dispatch","loading","error","products","state","setProducts","data","columns","label","field","sort","rows","forEach","product","push","id","_id","name","price","stock","actions","deleteProductHandler"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from \"../layouts/MetaData\";\nimport Loader from \"../layouts/Loader\";\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, clearErrors } from '../../actions/productAction'\n//import { DELETE_PRODUCT_RESET } from '../../constant/ProductConstant'\nimport {deleteProduct} from \"../../actions/productAction\";\n\nconst ProductsList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    //const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n\n\n\n    }, [dispatch, alert, error, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        products.forEach(product => {\n            data.rows.push({\n                id: product._id,\n                name: product.name,\n                price: `$${product.price}`,\n                stock: product.stock,\n                actions: <Fragment>\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n    const deleteProductHandler = (id) => {\n       dispatch(deleteProduct(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Products'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Products</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n"]},"metadata":{},"sourceType":"module"}