{"ast":null,"code":"import { LOGIN_FAIL, LOGIN_SUCCESS, LOGIN_REQUEST, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_FAIL, LOAD_USER_SUCCESS } from \"../constant/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // REGISTER USER\n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/actions/userAction.js"],"names":["LOGIN_FAIL","LOGIN_SUCCESS","LOGIN_REQUEST","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_FAIL","LOAD_USER_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","clearErrors"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,kBALJ,EAMIC,qBANJ,EAOIC,qBAPJ,EAQIC,iBARJ,EASIC,cATJ,EAUIC,iBAVJ,QAWO,2BAXP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAmB,MAAOC,QAAP,IAAkB;AACtD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACb;AADA,KAAD,CAAR;AAIA,UAAMc,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,eAAX,EAA2B;AAACP,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA3B,EAA4CG,MAA5C,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACd,aAAN;AAAqBmB,MAAAA,OAAO,EAACF,IAAI,CAACG;AAAlC,KAAD,CAAR;AAEH,GAfD,CAgBA,OAAOC,KAAP,EAAa;AACTR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACf,UADA;AAELoB,MAAAA,OAAO,EAACE,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;AAFvB,KAAD,CAAR;AAIH;AAGJ,CAzBM,C,CA2BP;;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAa,MAAOZ,QAAP,IAAkB;AACnD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACV;AADA,KAAD,CAAR;AAIA,UAAMW,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA8BO,QAA9B,EAAuCV,MAAvC,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACT,qBAAN;AAA6Bc,MAAAA,OAAO,EAACF,IAAI,CAACG;AAA1C,KAAD,CAAR;AAEH,GAfD,CAgBA,OAAOC,KAAP,EAAa;AACTR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACX,kBADA;AAELgB,MAAAA,OAAO,EAACE,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;AAFvB,KAAD,CAAR;AAIH;AAGJ,CAzBM;AA4BP,OAAO,MAAMG,WAAW,GAAG,MAAM,MAAOb,QAAP,IAAmB;AAChDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACZ;AADA,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import {\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_REQUEST,\n    CLEAR_ERRORS,\n    REGISTER_USER_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    LOAD_USER_REQUEST,\n    LOAD_USER_FAIL,\n    LOAD_USER_SUCCESS\n} from \"../constant/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email,password) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/login',{email,password},config)\n\n        dispatch({type:LOGIN_SUCCESS, payload:data.user})\n\n    }\n    catch (error){\n        dispatch({\n            type:LOGIN_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\n// REGISTER USER\nexport const register = (userData) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:REGISTER_USER_REQUEST,\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'multipart/form-data'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/register',userData,config)\n\n        dispatch({type:REGISTER_USER_SUCCESS, payload:data.user})\n\n    }\n    catch (error){\n        dispatch({\n            type:REGISTER_USER_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\n\nexport const clearErrors = () => async (dispatch) =>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n}\n"]},"metadata":{},"sourceType":"module"}