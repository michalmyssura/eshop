{"ast":null,"code":"import { LOGIN_FAIL, LOGIN_SUCCESS, LOGIN_REQUEST, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_FAIL, LOAD_USER_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS, UPDATE_PASSWD_FAIL, UPDATE_PASSWD_REQUEST, UPDATE_PASSWD_SUCCESS, UPDATE_PASSWD_RESET, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, FORGOT_PASSWD_REQUEST, FORGOT_PASSWD_SUCCESS, FORGOT_PASSWD_FAIL, NEW_PASSWD_SUCCESS, NEW_PASSWD_FAIL, NEW_PASSWD_REQUEST, ALL_USERS_FAIL, ALL_USERS_SUCCESS, ALL_USERS_REQUEST, DELETE_USER_REQUEST, DELETE_USER_SUCCESS, DELETE_USER_FAIL, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, UPDATE_USER_REQUEST, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constant/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // REGISTER USER\n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const allUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_USERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/admin/users');\n    dispatch({\n      type: ALL_USERS_SUCCESS,\n      payload: data.users\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_USERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/me');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    await axios.get('/api/v1/logout');\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/me/update', userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'aplication/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/password/update', passwords, config);\n    dispatch({\n      type: UPDATE_PASSWD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: FORGOT_PASSWD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'aplication/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/password/forgot', email, config);\n    dispatch({\n      type: FORGOT_PASSWD_SUCCESS,\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: FORGOT_PASSWD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const resetPassword = (token, passwords) => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PASSWD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'aplication/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config);\n    dispatch({\n      type: NEW_PASSWD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PASSWD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateUser = (id, userData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/user/${id}`, userData, config);\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get user details - ADMIN\n\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/user/${id}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteUser = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/user/${id}`);\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/michalmyssura/Desktop/projektdyplomowy/front/src/actions/userAction.js"],"names":["LOGIN_FAIL","LOGIN_SUCCESS","LOGIN_REQUEST","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_FAIL","LOAD_USER_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","UPDATE_PASSWD_FAIL","UPDATE_PASSWD_REQUEST","UPDATE_PASSWD_SUCCESS","UPDATE_PASSWD_RESET","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_REQUEST","FORGOT_PASSWD_REQUEST","FORGOT_PASSWD_SUCCESS","FORGOT_PASSWD_FAIL","NEW_PASSWD_SUCCESS","NEW_PASSWD_FAIL","NEW_PASSWD_REQUEST","ALL_USERS_FAIL","ALL_USERS_SUCCESS","ALL_USERS_REQUEST","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_REQUEST","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","allUsers","get","users","loadUser","logout","clearErrors","updateProfile","put","success","updatePassword","passwords","forgotPassword","resetPassword","token","updateUser","id","getUserDetails","deleteUser","delete"],"mappings":"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","sourcesContent":["import {\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_REQUEST,\n    CLEAR_ERRORS,\n    REGISTER_USER_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    LOAD_USER_REQUEST,\n    LOAD_USER_FAIL,\n    LOAD_USER_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PASSWD_FAIL,\n    UPDATE_PASSWD_REQUEST,\n    UPDATE_PASSWD_SUCCESS,\n    UPDATE_PASSWD_RESET,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    FORGOT_PASSWD_REQUEST,\n    FORGOT_PASSWD_SUCCESS,\n    FORGOT_PASSWD_FAIL,\n    NEW_PASSWD_SUCCESS,\n    NEW_PASSWD_FAIL,\n    NEW_PASSWD_REQUEST,\n    ALL_USERS_FAIL,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_REQUEST,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL\n} from \"../constant/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email,password) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/login',{email,password},config)\n\n        dispatch({type:LOGIN_SUCCESS, payload:data.user})\n\n    }\n    catch (error){\n        dispatch({\n            type:LOGIN_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\n// REGISTER USER\nexport const register = (userData) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:REGISTER_USER_REQUEST,\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'multipart/form-data'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/register',userData,config)\n\n        dispatch({type:REGISTER_USER_SUCCESS, payload:data.user})\n\n    }\n    catch (error){\n        dispatch({\n            type:REGISTER_USER_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const clearErrors = () => async (dispatch) =>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n}\n\n\nexport const updateProfile = (userData) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:UPDATE_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'multipart/form-data'\n            }\n        }\n\n        const {data} = await axios.put('/api/v1/me/update',userData,config)\n\n        dispatch({type:UPDATE_PROFILE_SUCCESS, payload:data.success})\n\n    }\n    catch (error){\n        dispatch({\n            type:UPDATE_PROFILE_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\nexport const updatePassword = (passwords) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:UPDATE_PASSWD_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'aplication/json'\n            }\n        }\n\n        const {data} = await axios.put('/api/v1/password/update',passwords,config)\n\n        dispatch({type:UPDATE_PASSWD_SUCCESS, payload:data.success})\n\n    }\n    catch (error){\n        dispatch({\n            type:UPDATE_PASSWD_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\n\nexport const forgotPassword = (email) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:FORGOT_PASSWD_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'aplication/json'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/password/forgot',email,config)\n\n        dispatch({type:FORGOT_PASSWD_SUCCESS, payload:data.message})\n\n    }\n    catch (error){\n        dispatch({\n            type:FORGOT_PASSWD_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\n\nexport const resetPassword = (token,passwords) =>async (dispatch)=>{\n    try {\n        dispatch({\n            type:NEW_PASSWD_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'aplication/json'\n            }\n        }\n\n        const {data} = await axios.put(`/api/v1/password/reset/${token}`,passwords,config)\n\n        dispatch({type:NEW_PASSWD_SUCCESS, payload:data.success})\n\n    }\n    catch (error){\n        dispatch({\n            type:NEW_PASSWD_FAIL,\n            payload:error.response.data.message\n        })\n    }\n\n\n}\n\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}